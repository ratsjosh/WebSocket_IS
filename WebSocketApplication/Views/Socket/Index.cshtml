@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <div class="row">
        <div class="col-lg-6">
            <h1>Global Chat</h1>
            <div id="wrap" class="message-wrap">
                <div id="chat" class="msg-wrap">
                    <div class="alert alert-info msg-date">
                        <strong>Today</strong>
                    </div>
                </div>
                <div class="send-wrap ">
                    <input class="form-control send-message" id="text-field" placeholder="Write a reply..." />
                    <br />
                    <button type="button" class="btn btn-primary" id="send">Send</button>
                </div>
            </div>
        </div>
        <div class="col-lg-6">
            <h1>Private Message</h1>
            <div id="wrap" class="message-wrap">
                <p>To:<input type="text" id="to" /></p>
                <p>content:<input type="text" id="content" /></p>
                <button type="button" class="btn btn-success" id="sendUserMessage">Send</button>

                <div id="private-chat" class="msg-wrap">
                </div>
            </div>
        </div>
    </div>
</div>

<ul class="list-group" id="active-connections"></ul>
<script>
    var btnStart = document.getElementById("send");
    var btnSend = document.getElementById("sendUserMessage");

    var protocol = location.protocol === "https:" ? "wss:" : "ws:";
    var wsUri = protocol + "//" + window.location.host + "/ws";
    var socket = new WebSocket(wsUri);

    socket.onopen = e => {
        console.log("socket opened", e);
    };

    socket.onmessage = function (e) {
        console.log("socket message recieved", e);
        if (isJson(e.data) === true) {
            let result = JSON.parse(e.data);
            if (result.IsPrivateMessage === true) {
                $("#private-chat").append(cmsg(result.Sender, result.Message));
            }
            else if (result.IsPrivateMessage === false) {
                // New connection has been established
                console.log(result.Message);
                if (variable.constructor === Array) {
                    for (let i = 0; i < result.Message.length; i++) {
                        // For debug: print out each element in Message array
                        console.log(result.Message[i]);
                        let $li = $("<li>", { "class": "list-group-item", text: result.Message[i] });
                        $("#active-connections").append($li);
                    }
                }
            }
        }
        else {
            $("#chat").append(cmsg(e.origin, e.data));
        }
    };

    function isJson(str) {
        try {
            JSON.parse(str);
        } catch (e) {
            return false;
        }
        return true;
    }

    function cmsg(s, d) {
        var wrap = $("<div>", { class: "media msg" });
        var div = $("<div>", { class: "media-body" });
        var time = $("<small>", { class: "pull-right time" }).text(new Date().toDateString()).append($("<i>", { class: "fa fa-clock-o" }));
        var user = $("<h5>", { class: "media-heading" }).text(s);
        var message = $("<div>", { class: "col-lg-10" }).text(d);
        wrap.append(div.append(time).append(user).append(message));
        return wrap;

    }

    btnStart.addEventListener("click", function (e) {
        e.preventDefault();
        var input = $("#text-field").val();
        var message = (input !== "" && input != undefined) ? input : "Empty string...";

        // Send message to server through socket
        socket.send(message);
        document.getElementById("text-field").value = "";
    });

    btnSend.addEventListener("click", function (e) {
        socket.send(JSON.stringify({
            Receiver: document.getElementById("to").value,
            Message: document.getElementById("content").value
        }));

        document.getElementById("content").value = "";
    });

</script>
